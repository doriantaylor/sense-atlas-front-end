@import "../data";

html {
    width: 100vw;
    min-height: 100vh;
    //overflow: hidden;
    font-family: "Roboto", "Helvetica Neue", "Helvetica", "Noto Sans Symbols2", sans-serif;
}

@for $i from 5 through 0 {
    h#{6 - $i} {
        font-size: 100% + $i * 20;
    }
}

@media screen {

    html {
        // background-color: #252525;
        background-color: #111111;
        color: #ababab;
        border-color: #ababab;
        box-shadow: inset 0px 0px 40px black;
    }

    /* come on man */
    details > summary {
        cursor: pointer;
    }

    %common {
        > main > article {
            font-size: 75%;

            > hgroup {
		flex: 0 auto;
                margin: 0.25rem;
                padding: 0.25rem;
                // @include vendor(border-radius, 0.5rem);
                border-radius: 0.5rem;
                border-width: 0.125rem;
                border-style: solid;

                textarea {
                    flex: 1 1 auto;
                    resize: none;
                }

                > h1 {
                    max-width: 100%;
                    display: flex;
                    align-items: stretch;
                    flex-basis: 100%;
                    > form {
                        display: flex;
                        flex: 1 1 auto;
                        max-width: 100%;
                    }
                    input[type="text"] {
                        flex-grow: 2;
                    }
                    button {
                        border-width: 0.125rem;
                    }
                    > p {
                        margin: 0;
                        &:nth-child(2) {
                            padding: 0.5em 0.25em 0.25em 0;
                        }
                        &[role="banner"] {
                            font-weight: lighter;
                            opacity: 0.5;
                            writing-mode: sideways-lr;
                            text-align: end;
                            margin: 0.5em 0.5em 0 0.125em;
                            > span[role="presentation"] {
                                writing-mode: initial;
                                border: 0.0625em solid currentColor;
                                border-radius: 0.5rem;
                                margin: 0 0 0.25em 0.25em;
                                padding: 0.5em;
                                display: inline-block;
                                vertical-align: middle;
                                cursor: default;
                            }
                        }
                    }
                }
                > span.date {
                    display: block;
                    text-align: right;
                }
                details {
                    summary {
                        font-weight: bolder;
                        font-size: 120%;
                    }
                }
		ul {
                    max-height: 5rem;
                    overflow: auto;
                    padding: 0;
		    margin: 1em 0 0 0;
                    li {
                        display: flex;
                        line-height: 1.4em;
                        height: 2em;
                        margin: 0.125rem 0;
                        > a:only-of-type {
                            display: inline-block;
                            flex-basis: 100%;
                        }
                        > form {
                            display: inline-block;
                        }
                        > form:only-child {
                            display: flex;
                            float: initial;
                            flex-basis: 100%;
                            gap: 0.25rem;
                            > span {
                                display: block;
                                flex-basis: 100%;
                                flex-grow: 2;
                            }
                            > input {
                                display: block;
                                flex-grow: 2;
                            }
                            > button {
                                display: block;
                                flex-basis: 2em;
                                width: 2em;
                                height: 100%;
                            }
			    > a:only-of-type {
				display: inline-block;
				flex-basis: 100%;
				text-overflow: ellipsis;
				overflow-x: hidden;
				&::before {
				    content: "\25b6\2009";
				}
			    }
                        }
                    }
                }
            }

            > section {
		flex: 1 auto;
                margin: 0.5em;

                &.relations {
                    // @include vendor(border-radius, 1em);
                    border-radius: 1em;
                    overflow: auto;
                    > section {
                        margin: 0.5rem;
                        padding: 0.25rem;
                        // @include vendor(border-radius, 1em);
                        border-radius: 1em;

                        h1, h2, h3, h4, h5, h6 {
                            display: inline-block;
                            vertical-align: middle;
                            margin: 0.25rem;
                            padding: 0.25rem;
                            //@include vendor(border-radius, 0.5rem);
                            border-radius: 0.5rem;
                        }
                        > form {
                            display: inline-block;
                            vertical-align: middle;
                            &:focus-within {
                                //@include vendor(border-radius, 0.25rem);
                                border-radius: 0.25rem;
                                border-width: 0.125rem;
                                border-style: solid;
                                margin: 0.25rem;
                                padding: 0.25rem;
                                display: flex;
                                gap: 0.125rem;
                                input[type="text"] {
                                    border-width: 0.125rem;
                                    border-style: solid;
                                    display: inline-block;
                                    flex-grow: 2;
                                }
                            }
                            input[type="text"] {
                                display: none;
                            }
                        }
                        ul {
                            margin: 0.25rem;
                            padding-left: 0;
                        }
                    }
                    > * {
                    }
                }
                input[type="radio"] {
                    appearance: none;
                    line-height: 1;
                    margin: 0;
                    padding: 0.25rem;
                    border-width: 0.125rem;
                    border-style: solid;
                    //@include vendor(border-radius, 0.25rem);
                    border-radius: 0.25rem;
                }
            }

            h1, h2, h3, h4, h5, h6 {
                line-height: 1;
                margin: 0;
            }
            li[typeof] {
                display: block;
                border-width: 0.125rem;
                border-style: solid;
                //@include vendor(border-radius, 0.25rem);
                border-radius: 0.25rem;
                margin: 0.125rem 0;
                button {
                    display: inline-block;
                    float: right;
                    margin: 0.125rem;
                }
                a[href] {
                    display: block;
                    color: inherit;
                    text-decoration: none;
                    padding: 0.25rem;
                }
            }
        }
    }

    // *all* entities
    $common: ();
    @each $class in $CLASSES {
        $common: append($common, "&[typeof~=\"#{$class}\"]", comma);
    }

    body {
        border:  0;
        margin:  0;
        padding: 0;

        background-color: #252525;

        width: 100vw;
        height: 100vh;


        #{$common} {
            display: grid;
            grid-template-rows: 2rem calc(100vh - 2rem);
            grid-template-areas: "meta" "main";

            > main {
                grid-area: main;
                display: flex;
                flex-direction: column-reverse;
                > article {
                    flex: 2 2 20rem;
                    margin: 0.5rem;
                    padding: 0.5rem;
                    border-radius: 1em;
                    display: flex;
                    // align-items: flex-start;
                    max-height: 50%;
                    hgroup {
                        flex: 1 1 50%;
                        max-width: 50%;
                        max-height: min-content;
                    }
                }
                > figure {
                    max-height: calc(50% - 2rem);
                    flex: 1 0 50%;
                    margin: auto;
                    display: flex;
                    align-items: center;
                    > svg {
                        display: block;
                        max-width: 100%;
                        max-height: 100%;
                        object-fit: contain;
                    }
                }
            }
            > footer {
                grid-area: meta;
                background-color: inherit;
                display: flex;
                justify-content: stretch;
                > * {
                    flex: 2 1 33%;
                    padding: 0 1rem;
                }
                > *:first-child {
                    background-color:inherit;
	            > form {
		        padding: 0 0.25em;
	            }
	            > ul.schemes {
		        display: none;
		        position: absolute;
		        top: 0;
		        opacity: 0;
		        transition: opacity 0.5s, display 0s allow-discrete;
		        background-color: inherit;
		        border-width: 1px;
		        border-radius: 0.25em;
		        padding: 0.25em;
		        margin: 0.25em;
		        > li {
		            display: flex;
		            *:first-child {
			        flex: 2 1 auto;
		            }
		        }
		        &.open {
		            display: block;
		            opacity: 1;
		        }
	            }
                }
                > *:nth-child(2) {
                    text-align: center;
                }
                > *:nth-child(3) {
                    text-align: end;
                }
            }
            @extend %common;

        }
    }

    @media (min-aspect-ratio: 1) {
        body {

            #{$common} {
                grid-template-rows: calc(100vh - 2rem) 2rem;
                grid-template-areas: "main" "meta";
                > main {
                    display: flex;
                    overflow: hidden;
                    flex-direction: row;

                    > article {
                        flex: 0 0 30rem;
                        flex-direction: column;
                        align-items: stretch;
                        max-height: unset;
                        > hgroup {
                            flex: 0 0 auto;
                            max-width: unset;
                        }
                    }
                    > figure {
                        > svg {
                            max-width: 100%;
                            max-height: 100%;
                            flex: 2 2 90vh;
                        }
                    }
                }
                > footer {
                    > *:first-child {
                        > ul.schemes {
                            top: unset;
                            bottom: 0;
                        }
                    }
                }
            }
        }
    }

    input, select, option, textarea, button {
        background-color: transparent;
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;
        margin: 0;
    }

    input[type="text"], input[type="number"], input[type="submit"],
    input[type="reset"], input[type="email"], input[type="datetime-local"],
    select, option, button, textarea {
        background-color: inherit;
        color: inherit;
        border-width: 0.125rem;
        border-style: solid;
        border-color: currentColor;
        border-radius: 0.25em;
    }

    input[type="submit"], input[type="reset"], input[type="checkbox"],
    input[type="radio"], label, button {
        cursor: pointer;
        &:disabled {
            cursor: not-allowed;
        }
    }

    a[href] {
        text-decoration: none;
        &, &:link {
            color: #9eacbc;
        }
        &:visited {
            color: #afa7bc;
        }
        &:hover {
            color: #d8e3f0;
            text-decoration: underline;
        }
        &:active {
            color: #c0a4a9;
            text-decoration: underline;
        }
    }

    %generic-flex {
        width: 100vw;
        height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    %generic-figure-body {
        width: 100vw;
        height: 100vh;
        display: grid;
        grid-template-rows: auto 2em;

        > main {
            grid-row: 1;
            display: flex;
            overflow: hidden;

            > article {
                flex-basis: 30rem;
                margin: 0.5rem;
                padding: 0.5rem;
                //@include vendor(border-radius, 1em);
                border-radius: 1em;
            }
            > figure {
                margin: auto;
                display: flex;
                align-items: center;
                > svg {
                    display: block;
                    width: 100%;
                    height: 100%;
                    object-fit: contain;
                }
            }
        }
        > footer {
            width: 100%;
            grid-row: 2;
            background-color: inherit;
            display: flex;
            justify-content: stretch;
            > * {
                flex: 2 1 33%;
                padding: 0 1rem;
            }
            > *:first-child {
                background-color:inherit;
	        > form {
		    padding: 0 0.25em;
	        }
	        > ul.schemes {
		    display: none;
		    position: absolute;
		    bottom: 0;
		    opacity: 0;
		    transition: opacity 0.5s, display 0s allow-discrete;
		    background-color: inherit;
		    border-width: 1px;
		    border-radius: 0.25em;
		    padding: 0.25em;
		    margin: 0.25em;
		    > li {
		        display: flex;
		        *:first-child {
			    flex: 2 1 auto;
		        }
		    }
		    &.open {
		        display: block;
		        opacity: 1;
		    }
	        }
            }
            > *:nth-child(2) {
                text-align: center;
            }
            > *:nth-child(3) {
                text-align: end;
            }
        }
    }

    %button-value {
        @each $class in $CLASSES {
            $pal: map-get($PALETTE, $class);
            button[value="#{$class}"] {
                color: nth($pal, 1);
                border-color: nth($pal, 1);
                background-color: nth($pal, 4);
                &:hover {
                    color: nth($pal, 3);
                    border-color: nth($pal, 3);
                    background-color: nth($pal, 6);
                }
                &:disabled, &.toggled {
                    color: nth($pal, 2);
                    border-color: nth($pal, 2);
                    background-color: nth($pal, 5);
                }
            }
        }
    }

    body {
        border: 0;
        margin: 0;
        padding: 0;
        //background-color: inherit;
        // overflow: hidden;

        // *all* entities
        $common: ();
        @each $class in $CLASSES {
            $common: append($common, "&[typeof~=\"#{$class}\"]", comma);
        }

        // common for *all* classes
        #{$common} {
            // @extend %generic-figure-body;

        }

        // ibis-only selectors
        $ibis: ();
        @each $class in join($IBIS, $PM) {
            $ibis: append($ibis, "&[typeof~=\"#{$class}\"]", comma);
        }
        #{$ibis} {
            > main > article > hgroup {
                > h1 {
                    min-height: 10rem;
                    > nav[role="menu"] {
                        display: flex;
                        flex-wrap: wrap;
                        gap: 0.25rem;
                        max-width: 4em;
                        > form {
                            flex: 2 1 100%;
                        }
                        form {
                            display: inline-block;
                            width: 100%;
                            > button {
                                display: inline-block;
                                box-sizing: border-box;
                                min-width: 1.5em;
                                width: 100%;
                                height: 100%;
                                padding: 0.25em;
                            }
                        }
                        > menu {
                            width: 100%;
                            margin: 0;
                            padding: 0;
                            display: flex;
                            //flex-wrap: wrap;
                            gap: 0.25rem;
                            font-size: 60%;
                            > li {
                                display: inline-block;
                                max-width: 50%;
                                flex: 2 1 1.5rem;
                            }
                        }
                    }
                    > form.description {
                        // display: flex;
                        //max-width: 100%;
                        //flex: 2 1 auto;
                        display: grid;
                        grid-template-columns: auto 2.5rem;
                        > textarea, input[type="text"] {
                            //min-width: 1em;
                            //max-width: 100%;
                            //flex: 2 1 auto;
                            margin: 0 0.25rem;
                            resize: none;
                            border: none;
                            grid-column: 1;
                        }
                        > button {
                            // flex-basis: 2.5rem;
                            grid-column: 2;
                        }
                    }
                }
		> aside {
		}
            }
        }

        // skos-only selectors
        &[typeof~="skos:Concept"] {
            > main > article {
                grid-template-rows: 16rem auto;

                > hgroup {
                    display: grid;
                    grid-template-areas: "label label" "description description" "created created" "altLabel hiddenLabel" "seeAlso seeAlso" "referenced-by referenced-by";
                    grid-template-columns: 1fr 1fr;
                    grid-template-rows: 3rem 4rem auto auto;
                    gap: 0.25rem;

                    > h1 {
                        grid-area: label;
                        height: 2em;

                        > form {
                            display: flex;
                            flex-basis: 100%;
                            gap: 0.25rem;
                        }
                    }
                    > form {
                        grid-area: description;
                        display: flex;
                        gap: 0.25rem;
                        // flex-basis: 1fr;
                        > textarea {
                            // flex-basis: 1fr;
                            flex-grow: 2;
                            //height: 4rem;
                        }
                    }
                    > aside {
                        &:first-of-type {
                            grid-area: altLabel;
                        }
			&:nth-of-type(2) {
                            grid-area: hiddenLabel;
			}
			&:nth-of-type(3) {
			    grid-area: seeAlso;
			}
                        // flex-basis: 2fr;
                        padding: 0.25rem;
                    }
                    > span[property~="dct:created"] {
                        grid-area: created;
                    }
                    > details:first-of-type {
                        grid-area: referenced-by;
                    }
                }
            }
        }

        // goal only
        &[typeof~="pm:Goal"] {
            > main > article {
                > hgroup {
                    > section:first-of-type {
                        display: flex;
                        max-width: 100%;
                        flex-wrap: wrap;
                        gap: 0.25rem;
                        margin: 0.5rem 0;
                        > div {
                            flex: 2 1 auto;
                        }
                    }
                }
            }
        }

        // task-only
        &[typeof~="pm:Task"] {
            > main > article {
                > hgroup {
                    > p:first-of-type {
                        display: flex;
                        justify-content: space-around;
                        gap: 0.25em;
                    }
                    > section {
                        display: flex;
                        max-width: 100%;
                        flex-wrap: wrap;
                        margin: 0.5rem 0;
                        // display: grid;
                        // grid-template-columns: 1fr 1fr;
                        // grid-template-rows: 1fr 1fr;
                        gap: 0.25em;
                        > div {
                            max-width: 50%;
                            flex: 2 0 45%;
                            > ul {
                                margin: 0 0 0.5em 0;
                            }
                        }
                    }
                }
            }
        }

        &[typeof~="cgto:Error"] {
            @extend %generic-flex;
        }

        &[typeof~="cgto:Space"] {
            box-sizing: border-box;
            min-height: 100vh;
            //max-height: fit-content;
            box-shadow: inset 0px 0px 40px black;
            font-weight: 300;
            padding-top: 2em;
            background-image: url(/asset/picture-of-graph-screen-smaller);
            background-repeat: no-repeat;
            background-size: 100vw auto;
            overflow: auto;

            h1, h2, h3, h4, h5, h6 {
                text-align: left;
                text-wrap: balance;
            }

            *[typeof~="gr:ProductOrService"] {
                color: #e2e2e2;
            }

            dfn, abbr {
                font-variant: small-caps;
                font-style: normal;
            }
            details {
                > summary {
                    font-weight: bolder;
                    cursor: pointer;
                    &:hover {
                        color: #e2e2e2;
                    }
                }
            }
            dt {
                font-weight: bolder;
                margin-top: 1em;
                &:first-of-type {
                    margin-top: 0;
                }
            }
            dd {
                margin-left: 1em;
            }
            hr {
                border: 1px solid currentColor;
                margin: 3em 0;
            }
            // @extend %generic-flex;
            font-size: 20px;
            text-align: justify;
            hyphens: auto;
            > header {
                max-width: 80%;
                font-size: 200%;
                margin: auto;
                text-shadow: 2px 2px 10px black, -2px -2px 10px black, -2px 2px 10px black, 2px -2px 10px black;
                > h1 {
                    text-align: left;
                    hyphens: none;
                    text-wrap: balance;
                }
                a {
                    font-weight: 900;
                    font-style: italic;
                }
            }
            > main {
                // max-width: 80%;
                margin: auto;
                display: flex;
                flex-direction: row-reverse;
                // flex-wrap: wrap;
                align-items: flex-start;
                justify-content: space-around;
                gap: 1em;
                margin: 1em;
                > nav {
                    max-width: max-content;
                    flex: 2 1 auto;
                    background-color: rgba(0, 0, 0, 0.5);
                    background-image: url(/asset/noisy-square);
                    border-radius: 0.5em;
                    padding: 1em;
                    text-shadow: 1px 1px 5px black, -1px -1px 5px black, 1px -1px 5px black, -1px 1px 5px black;
                    text-align: left;
                }
                > article {
                    font-size: 120%;
                    max-width: 70ex;
                    // margin: auto;
                    flex: 2 1 auto;
                    background-color: rgba(0, 0, 0, 0.5);
                    background-image: url(/asset/noisy-square);
                    padding: 1em;
                    border-radius: 0.5em;
                    text-shadow: 1px 1px 5px black, -1px -1px 5px black, 1px -1px 5px black, -1px 1px 5px black;
                }
            }
            > footer {
                margin: auto;
                text-align: center;
                padding: 1em;
            }
            figure {
                text-align: center;
                margin: 1em;
                > big:only-child {
                    display: inline-block;
                    font-weight: 900;
                    margin: auto;
                    text-shadow: none;
                    > a {
                        display: block;
                        padding: 1em;
                        border-radius: 0.25em;
                        background-color: #9eacbc;
                        color: #233240;
                        text-wrap: balance;
                    }
                }
            }
        }

        &[typeof~="ibis:Network"] {
            @extend %generic-figure-body;
            > main > article {
                max-height: 100%;
                display: flex;
                flex-direction: column;
                gap: 0.25em;
                > hgroup {
                    > h1 {
                        margin: 0 0 1rem 0;
                    }
                }

                > section {
                    // max-height: ;
                    border-radius: 1em;
                    padding: 0.5em;
                    flex: 3 7 10rem;
                    display: flex;
                    flex-direction: column;
                    > hgroup {
                        > h3 {
                            margin: 0;
                            display: inline-block;
                            border-radius: 0.5rem;
                            padding: 0.25rem;
                        }
                    }
                    > ul {
                        margin: 0.5rem 0 0 0;
                        // max-height: 5em;
                        overflow-y: auto;
                        padding-left: 0;
                        border-radius: 0.5rem;
                        border-style: solid;
                        border-width: 0.25rem;
                        flex: 2 1 5rem;

                        > li {
                            display: block;
                            margin-top: 0.25em;
                            &:first-child {
                                margin-top: 0;
                            }
                            a {
                                display: block;
                                padding: 0.5em;
                                border-style: solid;
                                border-width: 0.125rem;
                                border-radius: 0.5em;
                            }
                        }
                    }
                    @each $class in join($IBIS, join($PM, ("skos:Concept"))) {
                        $pal: map-get($PALETTE, $class);
                        &[about~="#{$class}"] {
                            > hgroup > h3 {
                                background-color: nth($pal, 7);
                                color: nth($pal, 8);
                            }
                            color: nth($pal, 1);
                            background-color: nth($pal, 3);
                            > ul {
                                border-color: nth($pal, 2);
                                background-color: nth($pal, 2);
                                > li > a {
                                    color: nth($pal, 2);
                                    border-color: nth($pal, 4);
                                    background-color: nth($pal, 5);

                                    &:link, &:visited {
                                        color: nth($pal, 2);
                                    }

                                    &:hover, &:active, &.fake-hover {
                                        color: nth($pal, 3);
                                        border-color: nth($pal, 3);
                                        background-color: nth($pal, 6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        &[typeof~="skos:ConceptScheme"] {
            $pal: map-get($PALETTE, "skos:Concept");
            @extend %generic-figure-body;
            box-shadow: inset 0px 0px 40px black;
            > main > article {
                max-height: 100%;
                display: flex;
                flex-direction: column;
                color: nth($pal, 1);
                background-color: nth($pal, 3);
                border-radius: 1em;
                > hgroup {
                    background-color: nth($pal, 4);
                    border-radius: 0.5em;
                    padding: 1em;
                    > h1 {
                        margin: 0;
                    }
                    > form {
                        display: flex;
                        > input {
                            flex: 2 1 100%;
                        }
                    }
                }
                > ul {
                    border-radius: 0.5em;
                    background-color: nth($pal, 2);
                    padding-left: 0;
                    overflow: auto;
                    li {
                        display: block;
                        margin: 0.25em;

                        a {
                            display: block;
                            padding: 0.5em;
                            border-style: solid;
                            border-width: 0.125rem;
                            border-radius: 0.5em;

                            color: nth($pal, 2);
                            border-color: nth($pal, 4);
                            background-color: nth($pal, 5);

                            &:link, &:visited {
                                color: nth($pal, 2);
                            }

                            &:hover, &:active, &.fake-hover {
                                color: nth($pal, 3);
                                border-color: nth($pal, 3);
                                background-color: nth($pal, 6);
                            }
                        }
                    }
                }
            }
        }

        // class-specific (mainly palette) stuff
        @each $class in $CLASSES {
            $pal: map-get($PALETTE, $class);
            button[value="#{$class}"] {
                color: nth($pal, 1) !important;
                border-color: nth($pal, 1) !important;
                background-color: nth($pal, 4) !important;
                &:hover {
                    color: nth($pal, 3) !important;
                    border-color: nth($pal, 3) !important;
                    background-color: nth($pal, 6) !important;
                }
                &:disabled {
                    color: nth($pal, 2) !important;
                    border-color: nth($pal, 2) !important;
                    background-color: nth($pal, 5) !important;
                }
            }

            &[typeof~="#{$class}"] {
                background-color: nth($pal, 1);

                > main {
                    background-color: nth($pal, 2);
                    color: nth($pal, 5);
                    border-color: nth($pal, 5);
                    // @include vendor(box-shadow, inset 0px 0px 40px nth($pal, 1));
                    box-shadow: inset 0px 0px 40px nth($pal, 1);

                    > article {
                        background-color: nth($pal, 3);
                        > hgroup {
                            color: nth($pal, 2);
                            border-color: nth($pal, 2);
                            background-color: nth($pal, 5);
                            &:focus-within {
                                color: nth($pal, 3);
                                border-color: nth($pal, 3);
                                background-color: nth($pal, 6);
                            }
                        }
                        > section {
                            &.relations {
                                background-color: nth($pal, 2);
                            }
                        }
                        button {
                            color: nth($pal, 1);
                            border-color: nth($pal, 1);
                            background-color: nth($pal, 4);
                            &:hover {
                                color: nth($pal, 3);
                                border-color: nth($pal, 3);
                                background-color: nth($pal, 6);
                            }
                            &:disabled {
                                color: nth($pal, 2);
                                border-color: nth($pal, 2);
                                background-color: nth($pal, 5);
                            }
                        }
			a:only-of-type {
			    color: nth($pal, 3);
			    text-decoration-color: nth($pal, 2);
			    &:hover {
				&::before {
				    text-decoration: none;
				}
			    }
			    &::before {
				color: nth($pal, 2);
			    }
			}
                    }
                }
		> footer {
                    > div:first-child > ul.schemes {
                        color: nth($pal, 1);
                        border-color: nth($pal, 1);
                        background-color: nth($pal, 4);
			a[href] {
			    color: inherit;
		        }
		    }
                }
            }
        }

        @each $prop in $PROPERTIES {
            $idx: str-index($prop, ":");
            $pfx: str-slice($prop, 1, $idx - 1);
            $suf: str-slice($prop, $idx + 1);
            $ns:  map-get($PREFIXES, $pfx);
            $uri: "#{$ns}#{$suf}";
            $pal: map-get($PALETTE, $prop);

            section {
                &[about="#{$prop}"], &[about="#{$uri}"], &[rel~="#{$prop}"], &[resource="#{$uri}"] {
                    color: nth($pal, 3);
                    background-color: nth($pal, 7);

                    h1, h2, h3, h4, h5, h6 {
                        background-color: nth($pal, 8);
                    }
                }
            }
        }

        main > article > section {

            @each $class in $CLASSES {
                $pal: map-get($PALETTE, $class);

                li[typeof~="#{$class}"] {
                    color: nth($pal, 2);
                    border-color: nth($pal, 2);
                    background-color: nth($pal, 5);

                    &:hover, &:active, &.fake-hover {
                        color: nth($pal, 3);
                        border-color: nth($pal, 3);
                        background-color: nth($pal, 6);
                    }

                    button {
                        color: nth($pal, 1);
                        border-color: nth($pal, 1);
                        background-color: nth($pal, 4);
                        &:hover {
                            color: nth($pal, 3);
                            border-color: nth($pal, 3);
                            background-color: nth($pal, 6);
                        }
                        &:disabled {
                            color: nth($pal, 2);
                            border-color: nth($pal, 2);
                            background-color: nth($pal, 5);
                        }
                    }
                }

                form[about="#{$class}"] {
                    color: nth($pal, 2);
                    border-color: nth($pal, 2);
                    background-color: nth($pal, 5);
                    input[type="text"] {
                        color: nth($pal, 2);
                        border-color: nth($pal, 2);
                        background-color: nth($pal, 5);
                    }
                }
            }
        }

        article {
            @each $class, $icon in $ICONS {
                $pal: map-get($PALETTE, $class);

                input[type="radio"][value="#{$class}"] {
		    // @debug "#{$class} => #{$pal}";
                    color: nth($pal, 2);
                    border-color: nth($pal, 2);
                    background-color: nth($pal, 5);
                    &:hover {
                        color: nth($pal, 3);
                        border-color: nth($pal, 3);
                        background-color: nth($pal, 6);
                    }
                    &::before {
			font-family: "Font Awesome 6 Free", "Noto Sans Symbols2";
                        content: "\f0c1\2009#{$icon}";
                    }
                    &:checked {
                        color: nth($pal, 1);
                        border-color: nth($pal, 1);
                        background-color: nth($pal, 4);
                    }
                }

                button.set-type[value="#{$class}"] {
                    color: nth($pal, 1);
                    border-color: nth($pal, 1);
                    background-color: nth($pal, 4);
                    &:hover {
                        color: nth($pal, 3);
                        border-color: nth($pal, 3);
                        background-color: nth($pal, 6);
                    }
                    &:disabled {
                        color: nth($pal, 2);
                        border-color: nth($pal, 2);
                        background-color: nth($pal, 5);
                    }
                }
            }
        }
    }


    // // vertical orientation
    // @media (max-aspect-ratio: 0.8) {
    //  html {
    //         font-size: 1vh;
    //    }
    //    main {
    //        flex-direction: column-reverse;
    //        flex-wrap: wrap;
    //        > article {
    //            flex-shrink: 2;
    //        }
    //        > figure {
    //            flex-shrink: 2;
    //        }
    //    }
    // }
}

// D3 SVG STUFF

@each $class in $CLASSES {
    $pal: map-get($PALETTE, $class);
    a[typeof~="#{$class}"] {
        > circle {
            fill: nth($pal, 5);
            &.target {
                fill: transparent;
            }
        }
        &:hover, &.subject, &.fake-hover {
            > circle {
                fill: nth($pal, 6);
                &.target {
                    fill: transparent;
                }
            }
        }
    }
}

@each $prop in $PROPERTIES {
    $i: str-index($prop, ":");
    $prop-id: "#{str-slice($prop, 1, $i - 1)}.#{str-slice($prop, $i + 1)}";
    $pal: map-get($PALETTE, $prop);

    line[rel~="#{$prop}"], path[rel~="#{$prop}"] {
        fill: none;
        stroke: nth($pal, 7);
        color: nth($pal, 7);
        // marker-end: url(#arrowhead);
        // marker-start: url(##{$prop-id}) !important;
        marker-end: url(##{$prop-id}) !important;
        &.subject {
            stroke: nth($pal, 8);
            color: nth($pal, 8);
            // marker-start: url(##{$prop-id}.subject) !important;
            marker-end: url(##{$prop-id}.subject) !important;
        }
        &.neighbour {
            //stroke-width: 3;
        }
    }

    polygon[about~="#{$prop}"] {
        opacity: 1 !important;
        fill: nth($pal, 7);
        //fill: currentColor;
        //stroke: none;
        &.subject {
            fill: nth($pal, 8);
        }
    }
}

// XXX THIS IS NOT THE BEST BUT IT WILL WORK FOR NOW LOL
@each $class, $pair in $FADE {
    $classes: nth($pair, 1);
    $props: nth($pair, 2);

    body[typeof~="#{$class}"] {
        svg {
            g.edge {
                @each $p in $props {
                    line, path {
                        &[rel~="#{$p}"], &[rev~="#{$p}"] {
                            opacity: 0.5;
                        }
                    }
                }
            }
            g.node {
                @each $c in $classes {
                    a[typeof~="#{$c}"] circle {
                        opacity: 0.5;
                    }
                }
            }
        }
    }
}

circle#backdrop {
    fill: black;
    opacity: 0.05;
}

marker polygon {
    fill: currentColor;
    stroke: none;
    opacity: 1;
}

